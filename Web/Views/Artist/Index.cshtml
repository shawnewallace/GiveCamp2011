@model IEnumerable<Web.Models.ArtistModel>
@{
    ViewBag.Title = "Index";
}
<h2>
    Index</h2>
<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table>
    <tr>
        <th>
        </th>
        <th>
            Last Name
        </th>
        <th>
            First Name
        </th>
        <th>
            Email Address
        </th>
        <th>
            Cell Phone #
        </th>
        <th>
            Website
        </th>
        <th>
            Classification
        </th>
        <th>
            Category
        </th>
        <th>
            Other Notes
        </th>
        <th>
        </th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email.Data)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CellPhone.Data)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Website.Data)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ArtistType.ArtistType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ArtistSubType.ArtistSubType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OtherNotes)
            </td>
        </tr>
    }
</table>

@*@(Html.Telerik().Grid<Web.Models.ArtistModel>()
            .Name("ArtistsGrid")
            .DataKeys(keys => { keys.Add(o => o.Id); })
            .ToolBar(commands => commands.Custom().Text("Add Artist").Action("Create","Artist"))
            .DataBinding(dataBinding =>
            {
                dataBinding.Ajax()
                    .Select("GridCreate", "Artist")
                    //.Insert("Create", "Artist")
                    .Update("GridEdit", "Artist")
                    .Delete("Delete", "Artist");
            })
            .Columns(columns =>
            {
                columns.Bound(o => o.Id).Width(100).Hidden().ReadOnly();
                columns.Bound(o => o.LastName).Width(200);
                columns.Bound(o => o.FirstName).Width(200);
                columns.Bound(o => o.Email.Data);
                columns.Bound(o => o.Dob.Day);
                columns.Bound(o => o.Dob.Month);
                columns.Bound(o => o.CellPhone.Data);
                columns.Bound(o => o.Website.Data);
                //columns.Command(commands =>commands.Select()).Width(180).Title("Select");
                
                //columns.Bound(o => o.ArtistType.ArtistType);
                //columns.Bound(o => o.ArtistSubType.ArtistSubType);
                //columns.Bound(o => o.OtherNotes);
                columns.Command(commands =>
                {
                    commands.Edit().ButtonType(GridButtonType.Text);
                    commands.Delete().ButtonType(GridButtonType.Text);
                }).Width(180).Title("Commands");

            })
            .Scrollable(scrolling => scrolling.Enabled(true))
            .Sortable(sorting => sorting.Enabled(true))
            .Pageable(paging => paging.Enabled(true))
            .Footer(true)
)*@