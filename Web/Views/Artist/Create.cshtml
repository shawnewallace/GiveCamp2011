@model Web.Models.ArtistModel
@{
    ViewBag.Title = "Add a New Artist";
}
<h2>
    Add a New Artist</h2>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
@using (Html.BeginForm())
{

    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Artist Information</legend>
        <div class="create-left">
            <div class="create-label">
                @Html.LabelFor(model => model.FirstName)
            </div>
            <div class="create-field">
                @Html.TextBoxFor(model => model.FirstName)
                @Html.ValidationMessageFor(model => model.FirstName)
            </div>
            <div class="create-label">
                @Html.LabelFor(model => model.LastName)
            </div>
            <div class="create-field">
                @Html.TextBoxFor(model => model.LastName)
                @Html.ValidationMessageFor(model => model.LastName)
            </div>
            <div class="create-label">
                @Html.LabelFor(model => model.Address1)
            </div>
            <div class="create-field">
                @Html.TextBoxFor(model => model.Address1.Data)
                @Html.Label("Include on Website?")
                @Html.CheckBoxFor(model => model.Address1.Enabled)
                @Html.ValidationMessageFor(model => model.Address1)
            </div>
            <div class="create-label">
                @Html.LabelFor(model => model.Address2)
            </div>
            <div class="create-field">
                @Html.TextBoxFor(model => model.Address2.Data)
                @Html.Label("Include on Website?")
                @Html.CheckBoxFor(model => model.Address2.Enabled)
                @Html.ValidationMessageFor(model => model.Address2)
            </div>
            <div class="create-label">
                @Html.LabelFor(model => model.City)
            </div>
            <div class="create-field">
                @Html.TextBoxFor(model => model.City.Data)
                @Html.Label("Include on Website?")
                @Html.CheckBoxFor(model => model.City.Enabled)
                @Html.ValidationMessageFor(model => model.City)
            </div>
            <div class="create-label">
                @Html.LabelFor(model => model.State)
            </div>
            <div class="create-field">
                @Html.TextBoxFor(model => model.State.Data)
                @Html.Label("Include on Website?")
                @Html.CheckBoxFor(model => model.State.Enabled)
                @Html.ValidationMessageFor(model => model.State)
            </div>
            <div class="create-label">
                @Html.LabelFor(model => model.Zip)
            </div>
            <div class="create-field">
                @Html.TextBoxFor(model => model.Zip.Data)
                @Html.Label("Include on Website?")
                @Html.CheckBoxFor(model => model.Zip.Enabled)
                @Html.ValidationMessageFor(model => model.Zip)
            </div>
            <div class="create-label">
                @Html.LabelFor(model => model.Phone)
            </div>
            <div class="create-field">
                @Html.TextBoxFor(model => model.Phone.Data)
                @Html.Label("Include on Website?")
                @Html.CheckBoxFor(model => model.Phone.Enabled)
                @Html.ValidationMessageFor(model => model.Phone)
            </div>
            <div class="create-label">
                @Html.LabelFor(model => model.CellPhone)
            </div>
            <div class="create-field">
                @Html.TextBoxFor(model => model.CellPhone.Data)
                @Html.Label("Include on Website?")
                @Html.CheckBoxFor(model => model.CellPhone.Enabled)
                @Html.ValidationMessageFor(model => model.CellPhone)
            </div>
            <div class="create-label">
                @Html.LabelFor(model => model.Email)
            </div>
            <div class="create-field">
                @Html.TextBoxFor(model => model.Email.Data)
                @Html.Label("Include on Website?")
                @Html.CheckBoxFor(model => model.Email.Enabled)
                @Html.ValidationMessageFor(model => model.Email)
            </div>
            <div class="create-label">
                @Html.LabelFor(model => model.Dob)
            </div>
            <div class="create-field">
                @Html.Telerik().NumericTextBoxFor(model => model.Dob.Day).InputHtmlAttributes(new { style = "width: 30px;" }).Spinners(true).MinValue(0).MaxValue(31).DecimalDigits(0)
                @Html.DropDownListFor(model => model.Dob.Month, ViewBag.MonthList as SelectList)
                @*@Html.ValidationMessageFor(model => model.Dob)*@   
            </div>
        </div>
        <div>
            <div class="create-label">
                @Html.LabelFor(model => model.Website)
            </div>
            <div class="create-field">
                @Html.EditorFor(model => model.Website)
                @Html.ValidationMessageFor(model => model.Website)
            </div>
            <div class="create-label">
                @Html.LabelFor(model => model.Twitter)
            </div>
            <div class="create-field">
                @Html.EditorFor(model => model.Twitter)
                @Html.ValidationMessageFor(model => model.Twitter)
            </div>
            <div class="create-label">
                @Html.LabelFor(model => model.Facebook)
            </div>
            <div class="create-field">
                @Html.EditorFor(model => model.Facebook)
                @Html.ValidationMessageFor(model => model.Facebook)
            </div>
            <div class="create-label">
                @Html.LabelFor(model => model.ArtistType)
            </div>
            <div class="create-field">
                @Html.DropDownListFor(model => model.ArtistTypeId, (SelectList)ViewBag.ArtistTypes)
                @Html.ValidationMessageFor(model => model.ArtistTypeId)
            </div>
            <div class="create-label">
                @Html.LabelFor(model => model.ArtistSubType)
            </div>
            <div class="create-field">
                @Html.DropDownListFor(model => model.ArtistSubTypeId, (SelectList)ViewBag.ArtistSubTypes)
                @Html.ValidationMessageFor(model => model.ArtistSubTypeId)
            </div>
            <div class="create-label">
                @Html.LabelFor(model => model.OtherNotes)
            </div>
            <div class="create-field">
                @Html.EditorFor(model => model.OtherNotes)
                @Html.ValidationMessageFor(model => model.OtherNotes)
            </div>
            @{
           var action = Html.ViewContext.RouteData.GetRequiredString("action");
           bool questionaireWrite = action.ToLower().Equals("create");
            
                <div class="create-label">
                    @Html.LabelFor(model => model.ResidentOfWesterville)
                </div>
                <div class="create-field">
                    @Html.ReadOrEditFor(model => model.ResidentOfWesterville, questionaireWrite)
                </div>
            
                <div class="create-label">
                    @Html.LabelFor(model => model.WorkInWesterville)
                </div>
                <div class="create-field">
                    @Html.ReadOrEditFor(model => model.WorkInWesterville, questionaireWrite)
                </div>
            }
        </div>
        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>	

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
    <script type="text/javascript">
        $.ajaxSetup({ cache: false });

        $('#ArtistTypeId').change(function () {
            $('#ArtistSubTypeId').load("/ArtistSubType/AjaxGet/" + $(this).val().toString());
        });
    </script>
}