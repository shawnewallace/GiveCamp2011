@model Web.Models.SiteModel
@{
    ViewBag.Title = "Edit";
}
@helper JavascriptizeLinks(List<Web.Models.SiteLink> links)
    {
        var comma = ",";
        foreach (var item in links)
        {
            if (item == links.Last())
            {
                comma = "";
            }
    <text>new siteLink( '@Html.Raw(item.Name)', '@item.Destination', false, @item.Id )@comma</text>
        }
}
<h2>
    Edit</h2>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jQuery.tmpl.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/knockout-1.2.0.js")" type="text/javascript"></script>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>SiteModel</legend>
        @Html.HiddenFor(model => model.Id)
        @Html.Partial("_CreateOrEdit", Model)
        <p>
            <input type="submit" value="Save" />
        </p>
        <h3>
            Links</h3>
        <ul data-bind="template: { name:'friendsTemplate', foreach:siteLinks}">
        </ul>
        <p>
            <button data-bind="click: addFriend, enable: siteLinks().length < 10">
                Add Link</button>
        </p>
        <p>
            <input type="submit" value="Save Links" data-bind="click: save, enable : buttonEnable" />
        </p>
        <div id="SaveResults">
        </div>
    </fieldset>

}
<script id="friendsTemplate" type="text/x-jquery-tmpl">
        <li>

            <a data-bind="attr: { href: destination, title: name , hidden: editing}" target="_blank">
               <span data-bind="text: name" ></span>
            </a>
             <label data-bind="visible : editing"><input data-bind="value: name, visible : editing" />Name</label>
             <label data-bind="visible : editing"><input data-bind="value: destination, visible : editing"  />Destination (Website Address)</label>
             <label><input type="checkbox" data-bind="checked: editing" class="editBox"/>Edit</label>
                <button data-bind="click: remove">Remove</button>

        </p>
        </li>                
</script>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script type="text/javascript">
function siteLink(name, destination, editing, id) {
    return {
        name: ko.observable(name),
        destination : ko.observable(destination),
        siteModel : ko.observable(@Model.Id),
        id : ko.observable(id),
        editing : ko.observable(editing),
        remove: function () {
           $.post('/SiteModels/DeleteLink/' + id, function(data) {
                 $('#SaveResults').html(data);
            });

            viewModel.siteLinks.remove(this);
        }
    };
}

var viewModel = {
        name : ko.observable('@Model.Name'),
        Address: ko.observable('@Model.Address'),
        City: ko.observable('@Model.City'),
        Hours: ko.observable('@Model.Hours'),
        PhoneNumber: ko.observable('@Model.PhoneNumber'),
        State: ko.observable('@Model.State'),
        Zip: ko.observable('@Model.Zip'),
        Id : ko.observable('@Model.Id'),
        buttonEnable: ko.observable(true),
         siteLinks: ko.observableArray([@JavascriptizeLinks(Model.siteLinks)]),
         addFriend: function () {
            this.siteLinks.push(new siteLink("Name", "Destination", true));
        },
        save : function () {
            viewModel.buttonEnable(false);
            $(".editBox").each(function (index, value) { 
                viewModel.siteLinks()[index].editing(false);
            });
            $.ajax({ 
                url : "/SiteModels/Save",
                type: "post",
                data: ko.toJSON(this),                                                                                  
                contentType: "application/json",
                success: function (result) { 
                    $("#SaveResults").html(result);  
                    viewModel.buttonEnable(true);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    viewModel.buttonEnable(true);
                    $("#SaveResults").html("<div class='error'>" + errorThrown + "</div>");  
                },


            });
        }
};
ko.applyBindings(viewModel);
</script>
