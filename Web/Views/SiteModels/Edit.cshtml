@model Web.Models.SiteModel
@{
    ViewBag.Title = "Edit";
}
@helper JavascriptizeLinks(List<Web.Models.SiteLink> links)
    {
        var comma = ",";
        foreach (var item in links)
        {
            if (item == links.Last())
            {
                comma = "";
            }
    <text>new siteLink(@item.Id, '@item.Name', '@item.Destination')@comma</text>
        }
}
<h2>
    Edit</h2>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jQuery.tmpl.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/knockout-1.2.0.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Custom/SiteModelKnockout.js")" type="text/javascript"></script>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>SiteModel</legend>
        @Html.HiddenFor(model => model.Id)
        @Html.Partial("_CreateOrEdit", Model)
        <h3>
            Links</h3>
        <ul data-bind="template: { name:'friendsTemplate', foreach:siteLinks}">
        </ul>
        <p>
            <input type="submit" value="Save" data-bind="click: save" />
        </p>
        <div id="SaveResults"></div>
    </fieldset>

}
<script id="friendsTemplate" type="text/x-jquery-tmpl">
        <li>

            <a data-bind="attr: { href: destination, title: name , hidden: editing}">
               <span data-bind="text: name" ></span>
            </a>
             <input data-bind="value: name, visible : editing" />
             <input data-bind="value: destination, visible : editing" />
             <label><input type="checkbox" data-bind="checked: editing" />Edit</label>
        </li>                
</script>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script type="text/javascript">
function siteLink(id, name, destination) {
    return {
        name: ko.observable(name),
        destination : ko.observable(destination),
        siteModel : ko.observable(@Model.Id),
        id : ko.observable(id),
        editing : ko.observable(false),
        remove: function () {
            viewModel.siteLinks.remove(this);
        }
    };
}

var viewModel = {
    siteLinks: ko.observableArray([@JavascriptizeLinks(Model.siteLinks)]),
        save : function () {
            $.ajax({ 
                url : "/Home/Save",
                type: "post",
                data: ko.toJSON(this),
                contentType: "application/json",
                success: function (result) { $("#SaveResults").html(result.message);  
                }
            });
        }
};
ko.applyBindings(viewModel);
</script>
